name: CI-CD

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  unit-testing:
    name: üß™ unit testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']

    steps:
      - name: Checkout code into go module directory
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
        id: Go

      - name: Get dependencies
        run: |
          go mod download

      - name: Test
        run: |
          export APP_ENV=test
          go test ./... -v -coverprofile profile.cov -coverpkg=./... 
          go tool cover -func profile.cov

      - name: Parse code-coverage value
        run: |
          codeCoverage=$(go tool cover -func=profile.cov | grep total | awk '{print $3}')
          codeCoverage=${codeCoverage%?}
          echo $codeCoverage:

  code_quality:
    name: üéñCode QualityÔ∏è
    runs-on: ubuntu-latest
    container: "golangci/golangci-lint:v1.57.2"
    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: false
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: GolangCI-Lint
        run: |
          golangci-lint run --timeout 9m0s